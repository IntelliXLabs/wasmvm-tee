{
  "swagger": "2.0",
  "info": {
    "title": "proto/dtvm/dtvm.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DTVMTeeService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/dtvm/execute": {
      "post": {
        "operationId": "DTVMTeeService_Execute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dtvmDTVMExecutionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dtvmDTVMExecutionRequest"
            }
          }
        ],
        "tags": [
          "DTVMTeeService"
        ]
      }
    }
  },
  "definitions": {
    "dtvmDTVMExecution": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "Protocol version"
        },
        "requestId": {
          "type": "string",
          "title": "Unique request identifier"
        },
        "bytecode": {
          "type": "string",
          "title": "DTVM bytecode (base64 encoded)"
        },
        "fnName": {
          "type": "string",
          "title": "Function name to execute"
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Input parameters (base64 encoded)"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp of the execution request"
        }
      },
      "title": "DTVMExecution represents a DTVM execution request containing\nthe bytecode and input parameters to be executed in TEE environment"
    },
    "dtvmDTVMExecutionRequest": {
      "type": "object",
      "properties": {
        "execution": {
          "$ref": "#/definitions/dtvmDTVMExecution",
          "title": "Execution parameters (bytecode, inputs)"
        },
        "runtimeConfig": {
          "$ref": "#/definitions/dtvmDTVMRuntimeConfig",
          "title": "Runtime configuration (mode, gas limit)"
        }
      },
      "title": "DTVMExecutionRequest combines execution parameters and runtime configuration"
    },
    "dtvmDTVMExecutionResponse": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "title": "Request identifier for tracking"
        },
        "result": {
          "$ref": "#/definitions/dtvmDTVMExecutionResult",
          "title": "Complete execution result"
        }
      },
      "title": "DTVMExecutionResponse contains the execution result with request tracking"
    },
    "dtvmDTVMExecutionResult": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Original input parameters (base64 encoded)"
        },
        "outputValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dtvmValue"
          },
          "title": "Execution output values"
        },
        "attestation": {
          "type": "string",
          "title": "TEE attestation report (JSON string)"
        },
        "reportData": {
          "type": "string",
          "title": "TEE report data (hex encoded), hash(inputs+outputs)"
        }
      },
      "title": "DTVMExecutionResult contains the complete execution result\nincluding inputs, outputs, hashes, and TEE attestation data"
    },
    "dtvmDTVMMode": {
      "type": "string",
      "enum": [
        "DTVM_MODE_INTERP_UNSPECIFIED",
        "DTVM_MODE_SINGLEPASS",
        "DTVM_MODE_MULTIPASS"
      ],
      "default": "DTVM_MODE_INTERP_UNSPECIFIED",
      "description": "- DTVM_MODE_INTERP_UNSPECIFIED: Unspecified/Default interpreter mode\n - DTVM_MODE_SINGLEPASS: Single-pass compilation mode\n - DTVM_MODE_MULTIPASS: Multi-pass compilation mode",
      "title": "DTVMMode defines the execution mode for DTVM\nCorresponds to int32_t _mode: 0: interp, 1: singlepass, 2: multipass"
    },
    "dtvmDTVMRuntimeConfig": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/dtvmDTVMMode",
          "title": "Execution mode (interpreter/compiler)"
        },
        "gasLimit": {
          "$ref": "#/definitions/dtvmGasLimitConfig",
          "title": "Gas limit configuration"
        }
      },
      "title": "DTVMRuntimeConfig defines the runtime configuration for DTVM execution"
    },
    "dtvmGasLimitConfig": {
      "type": "object",
      "properties": {
        "useGasLimit": {
          "type": "boolean",
          "title": "Whether to enable gas limiting"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "Maximum gas units allowed (if enabled)"
        }
      },
      "title": "GasLimitConfig controls gas consumption limits during execution"
    },
    "dtvmValue": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/dtvmValueType",
          "title": "Type of the value"
        },
        "int32Value": {
          "type": "integer",
          "format": "int32",
          "title": "32-bit signed integer"
        },
        "int64Value": {
          "type": "string",
          "format": "int64",
          "title": "64-bit signed integer"
        },
        "float32Value": {
          "type": "number",
          "format": "float",
          "title": "32-bit floating point"
        },
        "float64Value": {
          "type": "number",
          "format": "double",
          "title": "64-bit floating point"
        }
      },
      "title": "Value represents a typed value returned from DTVM execution\nWraps ZenValueExtern with type information"
    },
    "dtvmValueType": {
      "type": "string",
      "enum": [
        "VALUE_TYPE_UNSPECIFIED",
        "VALUE_TYPE_INT32",
        "VALUE_TYPE_INT64",
        "VALUE_TYPE_FLOAT32",
        "VALUE_TYPE_FLOAT64"
      ],
      "default": "VALUE_TYPE_UNSPECIFIED",
      "description": "- VALUE_TYPE_UNSPECIFIED: Unspecified type\n - VALUE_TYPE_INT32: 32-bit signed integer\n - VALUE_TYPE_INT64: 64-bit signed integer\n - VALUE_TYPE_FLOAT32: 32-bit floating point\n - VALUE_TYPE_FLOAT64: 64-bit floating point",
      "title": "ValueType enumerates the supported value types in DTVM"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
